# ======== BASHRC ===================
# Kabbaj Amine - amine.kabb@gmail.com
# Last modification: 2015-11-08
# ===================================


# ===================================
#		MISCELLANEOUS
# ===================================

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi

# Enable bash completion in interactive shells
if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

# If the command-not-found package is installed, use it
if [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found ]; then
	function command_not_found_handle {
	# check because c-n-f could've been removed in the meantime
	if [ -x /usr/lib/command-not-found ]; then
		/usr/lib/command-not-found -- "$1"
		return $?
	elif [ -x /usr/share/command-not-found/command-not-found ]; then
		/usr/share/command-not-found/command-not-found -- "$1"
		return $?
	else
		printf "%s: command not found\n" "$1" >&2
		return 127
	fi
}
fi

# Disable XON/XOFF protocol (No more Ctrl-S :D)
stty -ixon

# ===================================
#		COLOR SYNTAX
# ===================================

# In the prompt.
force_color_prompt=yes
if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi
if [ "$color_prompt" = yes ]; then
	PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
	PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# In manpages.
export LESS_TERMCAP_mb=$'\E[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\E[01;31m' # begin bold
export LESS_TERMCAP_me=$'\E[0m' # end mode
export LESS_TERMCAP_se=$'\E[0m' # end standout-mode
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m' # end underline
export LESS_TERMCAP_us=$'\E[01;32m' # begin underline

# Color support of 'ls','dir' and 'grep' using aliases.
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
	alias dir='dir --color=auto'
	alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# ===================================
#		SOURCE OTHER FILES
# ===================================

# Personal aliases.
if [ -f  ~/.dotfiles/bash/bash_aliases ]; then
	. ~/.dotfiles/bash/bash_aliases
fi

# Functions definitions.
if [ -f  ~/.dotfiles/bash/bash_functions ]; then
	. ~/.dotfiles/bash/bash_functions
fi

# Git prompt script.
if [ -f  ~/.dotfiles/bash/git-prompt.sh ]; then
	. ~/.dotfiles/bash/git-prompt.sh
fi

# FZF
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
if [ -f  ~/.dotfiles/bash/fzf/conf.sh ]; then
	. ~/.dotfiles/bash/fzf/conf.sh
fi

# Add RVM to PATH for scripting
export PATH="$PATH:$HOME/.rvm/bin"

# ===================================
#		CUSTOMIZATION
# ===================================

# Colors.
default='\033[00m'
bold='\033[01m'
red='\033[01;31m'
green='\033[01;32m'
yellow='\033[01;33m'

# Personal prompt.
if [[ $TERM == "linux" ]]; then
	sym1=">"
	sym2="<"
	sym3="+"
	sym4="."
else
	sym1="⟩"
	sym2="⟨"
	sym3="⦁"
	sym4="⬞"
fi
PS1="\[$red\]$sym1\[$green\]$sym1\[$yellow\]$sym1 \w\[$green\]\$(__git_ps1) \[$yellow\]$sym2\[$green\]$sym2\[$red\]$sym2\n\[$red\]$sym3\[$green\]$sym3\[$yellow\]$sym3 \[$default\]"
PS2="\[$yellow\]    ""$sym4""$sym4""$sym4"" \[$default\] "

# Execute a main tmux session only for 1st instance of terminal.
if [ -z "$TMUX" ]; then
	session_name="HaHoKo"
	tmux has-session -t $session_name 2> /dev/null
	if [ $? -eq 1 ]; then
		tmux attach -t $session_name || tmux new -s $session_name
	fi
fi

# Default editor
export EDITOR=/usr/bin/vim
